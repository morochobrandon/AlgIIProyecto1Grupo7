#include "Librerias\Listas.h"

int main ( ){
	lista * p=NULL;
	lista * s=NULL;
	int a = 0,x = 0, op=-1, m=0;
	insertarCabeza (&p, ++m);
	insertarCabeza (&p, ++m);
	insertarCabeza (&p, ++m);
	insertarCabeza (&p, ++m);
	insertarCabeza (&p, ++m);
	insertarCabeza (&p, ++m);
	insertarCabeza (&p, ++m);
	insertarCabeza (&p, ++m);
	insertarCabeza (&p, ++m);
	insertarCabeza (&p, ++m);
	insertarCabeza (&p, ++m);
	insertarCabeza (&p, ++m);
	insertarCabeza (&p, ++m);
	insertarCabeza (&p, ++m);
	insertarCabeza (&p, ++m);
	insertarCabeza (&p, ++m);
	insertarCabeza (&p, ++m);
	insertarCabeza (&p, ++m);
	insertarCabeza (&p, ++m);
	insertarCabeza (&p, ++m);
	insertarCabeza (&p, ++m);

	while (op!=0){
		cout<<"\t\tMENU DE LISTAS\n\n";
		cout<<"\t1. AGREGA dato por cabeza lista\n";
		cout<<"\t2. MUESTRA lista\n";
		cout<<"\t3. AGREGA dato por cola lista\n";
		cout<<"\t4. BUSCA elemento\n";
		cout<<"\t5. CUENTA sus elementos\n";
		cout<<"\t6. ORDENA por BURBUJA\n";
		cout<<"\t7. ORDENA por INSERCION\n";
		cout<<"\t8. ELIMINA dato en lista\n";
		cout<<"\t9. ELIMINA elementos repetidos\n";
		cout<<"\t10. VOLTEAR lista\n";
		cout<<"\t11. SEPARE CADA NUMERO MAYOR A 9 EN DIGITOS SEPARADOS\n";
		cout<<"\t12. ELIMINA elementos en posicion PAR \n";
		cout<<"\t13. CUENTA cuantas veces se repite el elemento\n";
		cout<<"\t14. ELIMINA ultima ocurrencia de un numero\n";
		cout<<"\t15. AGREGAR dato exacto\n";
		cout<<"\t0. Salir\n\n";
		cout<<"\tIndique su opcion (0-5)\t-> ";
		cin>>op;
		system("cls");
		cout <<"\n Opcion "<<op;
		switch (op){
			case 1: 
				cout <<"\n Agregar dato por cabeza de lista\n\n\n";
				cout <<"\t\tIndique numero a insertar por la Cabeza = ";
				cin >>x;
				insertarCabeza(&p,x);
				cout <<"\n\t EL ELEMENTO FUE AGREGADO EXITOSAMENTE\n\n";
				muestra(p);
				break;
			case 2: cout <<"\n Mostrar lista \n\n\n";muestra(p);
				break;
     		case 3: cout <<"\n AGREGA dato por cola lista\n";
				cout <<"\t\tIndique numero a insertar por la Cola = ";
				cin>>x;
				insertarfinal(&p,x);
				cout <<"\n\t EL ELEMENTO FUE AGREGADO EXITOSAMENTE\n\n";
				muestra(p);
				break;
			case 4: cout <<"\n BUSCA elemento\n";
					cout <<"\n\tIndique numero a buscar en la lista = ";
					cin>>x;
					busca(p, x);
					if (busca(p, x) == 1){
						cout <<"\n\tEL ELEMENTO FUE ENCONTRADO\n";

					}else
						cout <<"\n\tEL ELEMENTO NO FUE ENCONTRADO\n";
				break;
			case 5: cout <<"\n CUENTA sus elementos\n";
					cout <<"\n\t LA LISTA TIENE %i ELEMENTOS\n", cuenta(p);	
				break;
			case 6: cout <<"\n ORDENAR por BURBUJA \n";
					cout <<"\n\t ANTES: \n";
					muestra(p);
					burbuja(&p);
					cout <<"\n\n\t ORDENADO POR BURBUJA EXITOSAMENTE";
					cout <<"\n\n\t RESULTADO:";
					muestra(p);
				break;
			case 7: cout <<"\n ORDENAR POR INSERCION \n";
					cout <<"\n\t ANTES: \n";
					muestra(p);
					insercion(&p);
					cout <<"\n\n\t ORDENADO POR INSERCION EXITOSAMENTE";
					cout <<"\n\n\t RESULTADO:";
					muestra(p);
				break;
			case 8: cout <<"\n ELIMINA dato en lista\n";
					cout <<"\n\tIndique numero a eliminar en la lista = ";
					cin >>x;
					cout <<"\n\t ANTES: \n";
					muestra(p);
					elimina(&p, x);
					cout <<"\n\n\t RESULTADO:";
					muestra(p);
				break;
			case 9: cout <<"\n ELIMINA elementos repetidos\n";
					cout <<"\n\t ANTES: \n";
					muestra(p);
					elimrep(p);
					cout <<"\n\n\t REPETIDOS ELIMINADOS EXITOSAMENTE";
					cout <<"\n\n\t RESULTADO:";
					muestra(p);
				break;
			case 10: cout <<"\n VOLTEAR lista\n";
					cout <<"\n\t ANTES: \n";
					muestra(p);
					voltear2(&p);
					cout <<"\n\n\t\t LISTA VOLTEADA EXITOSAMENTE \n";
					cout <<"\n\n\t RESULTADO:";
					muestra(p);
				break; 
			case 11: cout <<"\n SEPARE CADA NUMERO MAYOR A 9 EN DIGITOS SEPARADOS\n";
					cout <<"\n\t ANTES: \n";
					muestra(p);
					separadig(p);
					cout <<"\n\n\t\t LISTA VOLTEADA EXITOSAMENTE \n";
					cout <<"\n\n\t RESULTADO:";
					muestra(p);
				break;
			case 12: cout <<"\n ELIMINA elementos en posicion PAR \n";
					cout <<"\n\t ANTES: \n";
					muestra(p);
					pospar(&p);
					cout <<"\n\n\t\t LISTA MODIFICADA EXITOSAMENTE \n";
					cout <<"\n\n\t RESULTADO:";
					muestra(p);
				break;
			case 13: cout <<"\nCONTAR CUANTAS VECES SE ENCUENTRA UN ELEMENTO\n";
					cout <<"\n\t Indique numero a buscar en la lista = ";
					cin >>x;
					if (cuentarep(p, x)){
						cout <<"\n\t EL ELEMENTO SI SE ENCUENTRA Y SE REPITE %i VEZ(CES)", cuentarep(p, x);
						}
					else{
						cout <<"\n\t EL ELEMENTO NO SE ENCUENTRA";
					}
					break;
			case 14: cout <<"\n ELIMINA LA ULTIMA OCURRENCIA DE UN NUMERO";
					cout <<"\n\t Indique numero a buscar y eliminar en la lista = ";
					cin >>x;
					cout <<"\n\t ANTES: \n";
					muestra(p);
					elimult(&p, x);
					cout <<"\n\n\t\t ULTIMA OCURRENCIA DEL NUMERO %i FUE ELIMINADO EXITOSAMENTE \n", x;
					cout <<"\n\n\t RESULTADO:";
					muestra(p);
			case 15: cout <<"\n AGREGA dato exacto \n";
				cout <<"\t\tIndique numero a insertar = ";
				cin >>x;
				muestra(p);
				cout <<"\t\tIndique numero a buscar de la lista = ";
				cin >>a;
				insertarPreciso(&p,x,a);
				cout <<"\n\t EL ELEMENTO FUE AGREGADO EXITOSAMENTE\n\n";
				muestra(p);
				break;  
			case 16: {
				cout <<"\n ELIMINA elementos primos\n";
					cout <<"\n\t ANTES: \n";
				muestra(p);
				primos(&p);
				cout <<"\n\n\t PRIMOS ELIMINADOS EXITOSAMENTE";
					cout <<"\n\n\t RESULTADO:";
				muestra(p);
				break;
				}
		};
	cout <<"\n\n";
	if (op) system("pause");
	system("cls");
	};
	return 0;
}